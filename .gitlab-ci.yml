image: 'node:14-alpine'

stages:
    - test
    - publish

include:
    - template: Code-Quality.gitlab-ci.yml

unit_tests:
    stage: test
    script:
        - npm ci
        - npm test

code_linting:
    stage: test
    script:
        - npm ci
        - npm run codelint

# Disabled since there are no style files in this package - RA
# style_linting:
# stage: test
# script:
# - npm ci
# - npm run stylelint

code_quality:
    stage: test
    tags:
        - code-quality
    rules:
        - if: $CODE_QUALITY_DISABLED
          when: never
        - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
        - if: $CI_COMMIT_TAG # Run code quality job in pipelines for tags

code_quality_html:
    extends: code_quality
    stage: test
    after_script:
        - mkdir code_quality
        - mv ./gl-code-quality-report.html code_quality/index.html
    variables:
        REPORT_FORMAT: html
    artifacts:
        paths:
            - code_quality

pages:
    stage: publish
    allow_failure: true
    script:
        - dirname=$(echo $CI_COMMIT_BRANCH | sed 's.\/.\-.g')
        - mkdir -p public/$dirname/
        - cp code_quality/index.html public/$dirname/index.html
        - cp code_quality/index.html public/index.html
    artifacts:
        name: '$CI_COMMIT_BRANCH'
        paths:
            - public
        expire_in: 30 days
    rules:
        - if: $CODE_QUALITY_DISABLED
          when: never
        - if: '$CI_COMMIT_REF_NAME =~ /^i18n\//'
          when: never
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
        - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
        - if: $CI_COMMIT_TAG

deploy:
    stage: publish
    script:
        - npm config set @priorit:registry https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/
        - npm config set -- '//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken' "${PACKREG_TOKEN}"
        - npm install
        - npm run build
        - npm publish
    rules:
        - if: $CI_COMMIT_BRANCH == 'main'

